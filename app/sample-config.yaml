application:
  LOG_LEVEL: 10 #10-50 (10 = most verbose logging)
  LOG_FILE: '/var/log/squiz-auth/squiz-auth.log'
  LDAP_SERVERS:
    'ldaps://ldap_server_1':
      bind_dn:  'cn=admin,ou=Applications,o=Org,c=uk,dc=org,dc=net'
      password: 'yourappbindpassword'
      attrs:    ['uid','mail','cn']
      filter:   '(&(objectClass=inetOrgPerson)(ou=ou=Staff*)(uid={username}))'
      base_dn:  'dc=org,dc=net'
      timeout:  2
      # If user_sanitize is defined, it will filter the inputted username
      # using 'regex' and replace it with 'replace'. This uses pythons
      # re.sub method, so documentation for this is available on the python
      # docu site.
      user_sanitize:
        regex:    '@(email_domain\.(com\.au|co\.uk|net|pl|co\.nz))$'
        replace:  ''
      sso_map:
        jwt:
          mail: 'email'
          cn: 'name'
          uid: 'external_id'

    'ldaps://ldap_server_2':
      bind_dn:  'cn=admin2,ou=Applications,o=Org,c=uk,dc=org,dc=net'
      password: 'yourappbindpassword'
      attrs:    ['mail','contactID','cn']
      filter:   '(&(objectClass=inetOrgPerson)(mail={username}))'
      base_dn:  'c=uk,dc=org,dc=net'
      timeout:  2
      sso_map:
        jwt:
          mail: 'email'
          cn: 'name'
          contactID: 'external_id'

  JWT_PROVIDERS:
    provider_name:
      shared_key: 'your_very_long_shared_key'
      callback:   'https://www.domain.com?jwt={jwt_payload}'
